<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tadpole.cloud.platformSettlement.modular.finance.mapper.SettlementDetailUsdMapper">
    <select id="findPageBySpec"
            parameterType="com.tadpole.cloud.platformSettlement.api.finance.model.params.SettlementDetailUsdParam"
            resultType="com.tadpole.cloud.platformSettlement.api.finance.model.result.SettlementDetailUsdResult">
        select  A.ID,
        A.FISCAL_PERIOD,
        A.SETTLEMENT_ID,
        A.REPORT_TYPE,
        A.INCOME_TYPE,
        A.SHOP_NAME,
        A.SITE,
        A.ACCOUNTING_CURRENCY,
        A.SKU,
        A.DEPARTMENT,
        A.TEAM,
        A.MATERIAL_CODE,
        A.SALES_BRAND,
        A.VOLUME_NORMAL,
        A.VOLUME_REISSUE,
        A.SALES_EXCLUDING_TAX,
        A.TAX,
        A.SALES_PROMOTION,
        A.REFUND,
        A.REFUND_PROMOTION,
        A.GIFTWARP_SHIPPING,
        A.COMMISSION,
        A.REFUND_COMMISSION,
        A.GOODWILL,
        A.AMAZON_FEES,
        A.STORAGE_FEE,
        A.REIMBURSEMENT,
        A.OTHER,
        A.WITHHELD_TAX,
        A.REMOVAL_DEAL,
        A.DISPOSE_FEE,
        A.ADVERTISING,
        A.CONFIRM_DATE,
        A.CONFIRM_BY,
        CASE WHEN A.CONFIRM_STATUS=0 THEN '未确认'
        WHEN A.CONFIRM_STATUS=1 THEN '已确认'
        END AS CONFIRM_STATUS,
        decode(A.material_code,'0','0',B.product_type) product_type,
        decode(A.material_code,'0','0',B.CATEGORY) CATEGORY,
        decode(A.material_code,'0','0',B.PRODUCT_NAME) PRODUCT_NAME,
        decode(A.material_code,'0','0',B.STYLE) STYLE,
        decode(A.material_code,'0','0',B.MAIN_MATERIAL) MAIN_MATERIAL,
        decode(A.material_code,'0','0',B.DESIGN) DESIGN,
        decode(A.material_code,'0','0',B.COMPANY_BRAND) COMPANY_BRAND,
        decode(A.material_code,'0','0',B.FIT_BRAND) FIT_BRAND,
        decode(A.material_code,'0','0',B.MODEL) MODEL,
        decode(A.material_code,'0','0',B.COLOR) COLOR,
        decode(A.material_code,'0','0',B.SIZES) SIZES,
        decode(A.material_code,'0','0',B.PACKING) PACKING,
        decode(A.material_code,'0','0',B.VERSION) VERSION,
        decode(A.material_code,'0','0',B.TYPE) TYPE,
        decode(A.material_code,'0','0',B.BUYER) BUYER,
        decode(A.material_code,'0','0',B.DEVELOPER) DEVELOPER,
        decode(A.material_code,'0','0',to_char(B.ACCOUNT_DATE,'yyyy-mm-dd')) ACCOUNT_DATE,
        decode(A.material_code,'0','0',B.STYLE_SECOND_LABEL) STYLE_SECOND_LABEL
        FROM  RP_SETTLEMENT_DETAIL_USD A
        LEFT JOIN MCMS_BASE_DATA.RP_MATERIAL B
        ON B.MATERIAL_CODE=A.MATERIAL_CODE
        <where>
            <if test="paramCondition.shopName != null and paramCondition.shopName !=''">
                and A.SHOP_NAME=#{paramCondition.shopName}
            </if>
            <if test="paramCondition.site != null and paramCondition.site !=''">
                and A.SITE=#{paramCondition.site}
            </if>
            <if test="paramCondition.reportType != null and paramCondition.reportType !=''">
                and A.REPORT_TYPE=#{paramCondition.reportType}
            </if>
            <if test="paramCondition.incomeType != null and paramCondition.incomeType !=''">
                and A.INCOME_TYPE=#{paramCondition.incomeType}
            </if>
            <if test="paramCondition.settlementId != null and paramCondition.settlementId != ''">
                and A.SETTLEMENT_ID like '%'||#{paramCondition.settlementId}||'%'
            </if>
            <if test="paramCondition.fiscalPeriod != null and paramCondition.fiscalPeriod != ''">
                and A.FISCAL_PERIOD = #{paramCondition.fiscalPeriod}
            </if>
            <if test="paramCondition.isDefect != null and paramCondition.isDefect == true ">
                AND A.DEPARTMENT is null
            </if>
            <if test="paramCondition.confirmStatus != null and paramCondition.confirmStatus != '' ">
                AND A.CONFIRM_STATUS= #{paramCondition.confirmStatus}
            </if>
            <if test="paramCondition.skus != null and paramCondition.skus.size>0">
                AND A.SKU IN
                <foreach collection="paramCondition.skus" open="(" close=")" separator="," item="sku">
                    #{sku}
                </foreach>
            </if>
        </where>
    </select>


    <select id="getSettlementMoney"
            parameterType="com.tadpole.cloud.platformSettlement.api.finance.entity.SettlementDetail"
            resultType="com.tadpole.cloud.platformSettlement.api.finance.entity.SettlementDetail">

        select D.SETTLEMENT_ID,
               D.SKU,
               D.SYS_SHOPS_NAME,
               D.SYS_SITE,
               sum(D.SALES_PROMOTION)         SALES_PROMOTION,
               sum(D.COMMISSION)              COMMISSION,
               sum(D.PREVIOUS_RESERVE_AMOUNT) PREVIOUS_RESERVE_AMOUNT,
               sum(D.REFUND_COMMISSION)       REFUND_COMMISSION,
               sum(D.DISPOSAL_FEE)            DISPOSAL_FEE,
               sum(D.LONG_TERM_STORAGE_FEE)   LONG_TERM_STORAGE_FEE,
               sum(D.GOOD_WILL)               GOOD_WILL,
               sum(D.REFUND_PROMOTION)        REFUND_PROMOTION,
               sum(D.ADVERTISING)             ADVERTISING,
               sum(D.AMAZON_FEE)              AMAZON_FEE,
               sum(D.SALES_TAX)               SALES_TAX,
               sum(D.SALES_OTHER)             SALES_OTHER,
               sum(D.REIMBURSEMENT)           REIMBURSEMENT,
               sum(D.OTHER)                   OTHER,
               sum(D.GIFTWARP_SHIPPING)       GIFTWARP_SHIPPING,
               sum(D.STORAGE_FEE)             STORAGE_FEE,
               sum(D.REFUND)                  REFUND,
               sum(D.WITHHELD_TAX)            WITHHELD_TAX,
               sum(D.CURRENT_RESERVE_AMOUNT)  CURRENT_RESERVE_AMOUNT,
               sum(D.UNSUCCESSFUL_TRANSFER)   UNSUCCESSFUL_TRANSFER,
               sum(D.REMOVAL_FEE)             REMOVAL_FEE,
               sum(D.SALES_PRINCIPAL)         SALES_PRINCIPAL,
               sum(D.LIGHTNING_DEAL_FEE)      LIGHTNING_DEAL_FEE,
               sum(D.SUCCESSFUL_CHARGE)       SUCCESSFUL_CHARGE,
               sum(D.PAYABLE_TO_AMAZON)       PAYABLE_TO_AMAZON,
               sum(D.AMOUNT)                  AMOUNT,
               sum(D.SALES_TAX)               TAX,
               sum(D.REFUND)                  REFUND,
               sum(D.REFUND_PROMOTION)        REFUND_PROMOTION,
               sum(D.Commission)              COMMISSION,
               sum(D.REFUND_COMMISSION)       REFUND_COMMISSION,
               sum(D.Storage_Fee)             STORAGE_FEE,
               sum(D.Disposal_Fee)            DISPOSE_FEE,
               sum(D.REMOVAL_FEE)             REMOVAL_DEAL
        from CW_SETTLEMENT_DETAIL D
                 LEFT JOIN CW_SETTLEMENT S on S.SETTLEMENT_ID = D.SETTLEMENT_ID
        WHERE D.SETTLEMENT_ID = #{paramCondition.settlementId}
          and D.POSTED_DATE_TIME >= #{paramCondition.postedDate}
          and D.POSTED_DATE_TIME &lt;= #{paramCondition.createTime}
          and S.STATUS = 2
        group by D.SETTLEMENT_ID, D.SKU, D.SYS_SHOPS_NAME, D.SYS_SITE

    </select>

    <update id="afreshExchangeRate" parameterType="com.tadpole.cloud.platformSettlement.api.finance.model.params.SettlementDetailUsdParam">
        MERGE INTO (SELECT * FROM RP_SETTLEMENT_DETAIL_USD) A
        USING (
        SELECT A.ID LISTING_ID,A.*, C.DIRECT_RATE
        FROM RP_SETTLEMENT_DETAIL_LISTING A
        LEFT JOIN RP_SPOT_EXCHANGE_RATE C
        ON (C.ORIGINAL_CURRENCY = A.ORIGINAL_CURRENCY AND
        (C.INEFFECTIVE_DATE >=
        TO_DATE(A.FISCAL_PERIOD || '-01', 'YYYY-MM-DD') AND
        C.EFFECT_DATE &lt;=
        TO_DATE(A.FISCAL_PERIOD || '-01', 'YYYY-MM-DD')))
            where A.ORIGINAL_CURRENCY!='USD') B
        ON (A.LISTING_ID = B.LISTING_ID)
        WHEN MATCHED THEN
        UPDATE
        SET A.SALES_EXCLUDING_TAX = B.SALES_EXCLUDING_TAX * B.DIRECT_RATE,
        A.TAX                 = B.TAX * B.DIRECT_RATE,
        A.SALES_PROMOTION     = B.SALES_PROMOTION * B.DIRECT_RATE,
        A.REFUND              = B.REFUND * B.DIRECT_RATE,
        A.REFUND_PROMOTION    = B.REFUND_PROMOTION * B.DIRECT_RATE,
        A.REFUND_COMMISSION   = B.REFUND_COMMISSION * B.DIRECT_RATE,
        A.GIFTWARP_SHIPPING   = B.GIFTWARP_SHIPPING * B.DIRECT_RATE,
        A.COMMISSION          = B.COMMISSION * B.DIRECT_RATE,
        A.GOODWILL            = B.GOODWILL * B.DIRECT_RATE,
        A.AMAZON_FEES         = B.AMAZON_FEES * B.DIRECT_RATE,
        A.STORAGE_FEE         = B.STORAGE_FEE * B.DIRECT_RATE,
        A.REIMBURSEMENT       = B.REIMBURSEMENT * B.DIRECT_RATE,
        A.OTHER               = B.OTHER * B.DIRECT_RATE,
        A.WITHHELD_TAX        = B.WITHHELD_TAX * B.DIRECT_RATE,
        A.REMOVAL_DEAL        = B.REMOVAL_DEAL * B.DIRECT_RATE,
        A.DISPOSE_FEE         = B.DISPOSE_FEE * B.DIRECT_RATE,
        A.ADVERTISING         = B.ADVERTISING * B.DIRECT_RATE
        WHERE A.ID=#{paramCondition.id}
    </update>

    <update id="refreshExchangeRate" parameterType="com.tadpole.cloud.platformSettlement.api.finance.model.params.SettlementDetailUsdParam">
        MERGE INTO (SELECT * FROM RP_SETTLEMENT_DETAIL_USD) A
        USING (
        SELECT A.ID LISTING_ID,A.*, C.DIRECT_RATE
        FROM RP_SETTLEMENT_DETAIL_LISTING A
        LEFT JOIN RP_SPOT_EXCHANGE_RATE C
        ON (C.ORIGINAL_CURRENCY = A.ORIGINAL_CURRENCY AND
        (C.INEFFECTIVE_DATE >=
        TO_DATE(A.FISCAL_PERIOD || '-01', 'YYYY-MM-DD') AND
        C.EFFECT_DATE &lt;=
        TO_DATE(A.FISCAL_PERIOD || '-01', 'YYYY-MM-DD')))
        where A.ORIGINAL_CURRENCY!='USD') B
        ON (A.LISTING_ID = B.LISTING_ID)
        WHEN MATCHED THEN
        UPDATE
        SET A.SALES_EXCLUDING_TAX = B.SALES_EXCLUDING_TAX * B.DIRECT_RATE,
        A.TAX                 = B.TAX * B.DIRECT_RATE,
        A.SALES_PROMOTION     = B.SALES_PROMOTION * B.DIRECT_RATE,
        A.REFUND              = B.REFUND * B.DIRECT_RATE,
        A.REFUND_PROMOTION    = B.REFUND_PROMOTION * B.DIRECT_RATE,
        A.REFUND_COMMISSION   = B.REFUND_COMMISSION * B.DIRECT_RATE,
        A.GIFTWARP_SHIPPING   = B.GIFTWARP_SHIPPING * B.DIRECT_RATE,
        A.COMMISSION          = B.COMMISSION * B.DIRECT_RATE,
        A.GOODWILL            = B.GOODWILL * B.DIRECT_RATE,
        A.AMAZON_FEES         = B.AMAZON_FEES * B.DIRECT_RATE,
        A.STORAGE_FEE         = B.STORAGE_FEE * B.DIRECT_RATE,
        A.REIMBURSEMENT       = B.REIMBURSEMENT * B.DIRECT_RATE,
        A.OTHER               = B.OTHER * B.DIRECT_RATE,
        A.WITHHELD_TAX        = B.WITHHELD_TAX * B.DIRECT_RATE,
        A.REMOVAL_DEAL        = B.REMOVAL_DEAL * B.DIRECT_RATE,
        A.DISPOSE_FEE         = B.DISPOSE_FEE * B.DIRECT_RATE,
        A.ADVERTISING         = B.ADVERTISING * B.DIRECT_RATE
        WHERE A.CONFIRM_STATUS = 0
    </update>

    <select id="getQuantity"  resultType="com.tadpole.cloud.platformSettlement.api.finance.model.result.SettlementDetailUsdResult"
            parameterType="com.tadpole.cloud.platformSettlement.api.finance.model.params.SettlementDetailUsdParam">
        select
            sum(VOLUME_NORMAL) volumeNormal,
            sum(VOLUME_REISSUE) volumeReissue,
            sum(SALES_EXCLUDING_TAX) salesExcludingTax,
            sum(TAX) tax,
            sum(SALES_PROMOTION) salesPromotion,
            sum(REFUND) refund,
            sum(REFUND_PROMOTION) REFUND_PROMOTION,
            sum(GIFTWARP_SHIPPING) GIFTWARP_SHIPPING,
            sum(COMMISSION) COMMISSION,
            sum(REFUND_COMMISSION) REFUND_COMMISSION,
            sum(GOODWILL) GOODWILL,
            sum(AMAZON_FEES) AMAZON_FEES,
            sum(STORAGE_FEE) STORAGE_FEE,
            sum(REIMBURSEMENT) REIMBURSEMENT,
            sum(OTHER) OTHER,
            sum(WITHHELD_TAX) WITHHELD_TAX,
            sum(REMOVAL_DEAL) REMOVAL_DEAL,
            sum(DISPOSE_FEE) DISPOSE_FEE,
            sum(ADVERTISING) ADVERTISING
        FROM RP_SETTLEMENT_DETAIL_USD
        <where>
            <if test="paramCondition.shopName != null and paramCondition.shopName !=''">
                and SHOP_NAME=#{paramCondition.shopName}
            </if>
            <if test="paramCondition.site != null and paramCondition.site !=''">
                and SITE=#{paramCondition.site}
            </if>
            <if test="paramCondition.reportType != null and paramCondition.reportType !=''">
                and REPORT_TYPE=#{paramCondition.reportType}
            </if>
            <if test="paramCondition.incomeType != null and paramCondition.incomeType !=''">
                and INCOME_TYPE=#{paramCondition.incomeType}
            </if>
            <if test="paramCondition.settlementId != null and paramCondition.settlementId != ''">
                and SETTLEMENT_ID like '%'||#{paramCondition.settlementId}||'%'
            </if>
            <if test="paramCondition.fiscalPeriod != null and paramCondition.fiscalPeriod != ''">
                and FISCAL_PERIOD = #{paramCondition.fiscalPeriod}
            </if>
            <if test="paramCondition.isDefect != null and paramCondition.isDefect == true ">
                AND DEPARTMENT is null
            </if>
            <if test="paramCondition.confirmStatus != null and paramCondition.confirmStatus != '' ">
                AND CONFIRM_STATUS= #{paramCondition.confirmStatus}
            </if>
            <if test="paramCondition.skus != null and paramCondition.skus.size>0">
                AND SKU IN
                <foreach collection="paramCondition.skus" open="(" close=")" separator="," item="sku">
                    #{sku}
                </foreach>
            </if>
        </where>
    </select>

    <select id="autoAmountSummary" parameterType="com.tadpole.cloud.platformSettlement.api.finance.entity.SettlementDetailUsd"
            resultType="com.tadpole.cloud.platformSettlement.api.finance.model.result.SettlementDetailUsdResult">
        SELECT abs(t.sales_excluding_tax)+abs(t.tax)+abs(t.sales_promotion)+abs(t.refund)+abs(t.refund_promotion)+abs(t.giftwarp_shipping)+abs(t.commission)+abs(t.refund_commission)+
               abs(t.goodwill)+abs(t.amazon_fees)+abs(t.other)+abs(t.reimbursement)+abs(t.withheld_tax)+abs(t.dispose_fee)+abs(t.removal_deal) as sumAll
        FROM rp_settlement_detail_usd t
        WHERE t.ID=#{paramCondition.id}
    </select>

    <!--将结算单明细（美金）批量拆分到站内费用手工分摊表 -->
    <update id="insertOrUpdateManualAllocation" parameterType = "com.tadpole.cloud.platformSettlement.api.finance.model.params.SettlementDetailUsdParam">
        MERGE INTO (SELECT * FROM RP_STATION_MANUAL_ALLOCATION WHERE CONFIRM_STATUS = 0 AND ALLOC_ID IS NULL) B
        USING (
            SELECT
                A.FISCAL_PERIOD,
                NVL(A.REPORT_TYPE,'0') REPORT_TYPE,
                A.INCOME_TYPE,
                A.SHOP_NAME,
                A.SITE,
                A.ACCOUNTING_CURRENCY,
                SUM( A.ADVERTISING ) ADVERTISING,
                SUM( A.STORAGE_FEE ) STORAGE_FEE
            FROM
                RP_SETTLEMENT_DETAIL_USD A
            WHERE
                A.SKU = '0'
                AND A.INCOME_TYPE IN ('预估', '确认', '调整')
                AND A.SHOP_NAME = #{paramCondition.shopName}
                <if test="paramCondition.sites != null and paramCondition.sites.size() > 0">
                    AND A.SITE IN
                    <foreach collection="paramCondition.sites" item="item" index="index" separator=","  open="(" close=")">
                        #{item}
                    </foreach>
                </if>
                AND A.FISCAL_PERIOD = #{paramCondition.fiscalPeriod}
                AND A.CONFIRM_STATUS = 0
                AND (A.ADVERTISING != 0 OR A.STORAGE_FEE != 0)
            GROUP BY
                A.FISCAL_PERIOD,
                NVL(A.REPORT_TYPE,'0'),
                A.INCOME_TYPE,
                A.SHOP_NAME,
                A.SITE,
                A.ACCOUNTING_CURRENCY
        ) C ON (
            C.FISCAL_PERIOD = B.FISCAL_PERIOD
            AND NVL(C.REPORT_TYPE,'0') = NVL(B.REPORT_TYPE,'0')
            AND C.INCOME_TYPE = B.INCOME_TYPE
            AND C.SHOP_NAME = B.SHOP_NAME
            AND C.SITE = B.SITE
        )
        WHEN MATCHED THEN
            UPDATE SET
                B.CREATE_BY = #{paramCondition.confirmBy},
                B.CREATE_AT = #{paramCondition.confirmDate},
                B.STORAGE_FEE = B.STORAGE_FEE + C.STORAGE_FEE,
                B.ADVERTISING = B.ADVERTISING + C.ADVERTISING
        WHEN NOT MATCHED THEN
            INSERT
            (
                B.FISCAL_PERIOD,
                B.REPORT_TYPE,
                B.INCOME_TYPE,
                B.SHOP_NAME,
                B.SITE,
                B.ACCOUNTING_CURRENCY,
                B.SKU,
                B.DEPARTMENT,
                B.TEAM,
                B.MATERIAL_CODE,
                B.SALES_BRAND,
                B.CREATE_BY,
                B.CREATE_AT,
                B.CONFIRM_STATUS,
                B.STORAGE_FEE,
                B.ADVERTISING
            )
            VALUES(
                C.FISCAL_PERIOD,
                NVL(C.REPORT_TYPE,'0'),
                C.INCOME_TYPE,
                C.SHOP_NAME,
                C.SITE,
                C.ACCOUNTING_CURRENCY,
                '0',
                '0',
                '0',
                '0',
                '0',
                #{paramCondition.confirmBy},
                #{paramCondition.confirmDate},
                0,
                C.STORAGE_FEE,
                C.ADVERTISING
            )
    </update>

    <!--将结算单明细（美金）批量拆分到站内费用自动分摊表汇总 -->
    <update id="insertOrUpdateAutoAllocationTotal" parameterType = "com.tadpole.cloud.platformSettlement.api.finance.model.params.SettlementDetailUsdParam">
        MERGE INTO (SELECT * FROM RP_STATION_AUTO_ALLOCATION WHERE CONFIRM_STATUS = 0 AND ALLOC_ID IS NULL) B
        USING (
            SELECT
                E.*,
                NVL(F.TOTAL_INCOME, 0) TOTAL_INCOME
            FROM
            (
                SELECT
                    A.FISCAL_PERIOD,
                    NVL(A.REPORT_TYPE,'0') REPORT_TYPE,
                    A.INCOME_TYPE,
                    A.SHOP_NAME,
                    A.SITE,
                    A.ACCOUNTING_CURRENCY,
                    A.PRODUCT_TYPE,
                    SUM(A.SALES_EXCLUDING_TAX) SALES_EXCLUDING_TAX,
                    SUM(A.TAX) TAX,
                    SUM(A.SALES_PROMOTION) SALES_PROMOTION,
                    SUM(A.REFUND) REFUND,
                    SUM(A.REFUND_PROMOTION) REFUND_PROMOTION,
                    SUM(A.GIFTWARP_SHIPPING) GIFTWARP_SHIPPING,
                    SUM(A.COMMISSION) COMMISSION,
                    SUM(A.REFUND_COMMISSION) REFUND_COMMISSION,
                    SUM(A.GOODWILL) GOODWILL,
                    SUM(A.AMAZON_FEES) AMAZON_FEES,
                    SUM(A.OTHER) OTHER,
                    SUM(A.REIMBURSEMENT) REIMBURSEMENT,
                    SUM(A.WITHHELD_TAX) WITHHELD_TAX,
                    SUM(A.DISPOSE_FEE) DISPOSE_FEE,
                    SUM(A.REMOVAL_DEAL) REMOVAL_DEAL
                FROM
                    RP_SETTLEMENT_DETAIL_USD A
                WHERE
                    A.SKU = '0'
                    AND A.INCOME_TYPE IN ('预估', '确认', '调整')
                    AND A.SHOP_NAME = #{paramCondition.shopName}
                    <if test="paramCondition.sites != null and paramCondition.sites.size() > 0">
                        AND A.SITE IN
                        <foreach collection="paramCondition.sites" item="item" index="index" separator=","  open="(" close=")">
                            #{item}
                        </foreach>
                    </if>
                    AND A.FISCAL_PERIOD = #{paramCondition.fiscalPeriod}
                    AND A.CONFIRM_STATUS = 0
                    AND (
                        ABS(A.SALES_EXCLUDING_TAX) +
                        ABS(A.TAX) +
                        ABS(A.SALES_PROMOTION) +
                        ABS(A.REFUND) +
                        ABS(A.REFUND_PROMOTION) +
                        ABS(A.GIFTWARP_SHIPPING) +
                        ABS(A.COMMISSION) +
                        ABS(A.REFUND_COMMISSION) +
                        ABS(A.GOODWILL) +
                        ABS(A.AMAZON_FEES) +
                        ABS(A.OTHER) +
                        ABS(A.REIMBURSEMENT) +
                        ABS(A.WITHHELD_TAX) +
                        ABS(A.DISPOSE_FEE) +
                        ABS(A.REMOVAL_DEAL)
                    ) > 0
                GROUP BY
                    A.FISCAL_PERIOD,
                    NVL(A.REPORT_TYPE,'0'),
                    A.INCOME_TYPE,
                    A.SHOP_NAME,
                    A.SITE,
                    A.ACCOUNTING_CURRENCY,
                    A.PRODUCT_TYPE
            ) E LEFT JOIN (
                SELECT
                    D.FISCAL_PERIOD,
                    NVL(D.REPORT_TYPE,'0') REPORT_TYPE,
                    D.INCOME_TYPE,
                    D.SHOP_NAME,
                    D.SITE,
                    D.ACCOUNTING_CURRENCY,
                    SUM(D.SALES_EXCLUDING_TAX) TOTAL_INCOME
                FROM
                    RP_SETTLEMENT_DETAIL_USD D
                WHERE
                    D.SKU != '0'
                    AND D.INCOME_TYPE IN ('预估', '确认' ,'调整')
                    AND D.SHOP_NAME = #{paramCondition.shopName}
                    <if test="paramCondition.sites != null and paramCondition.sites.size() > 0">
                        AND D.SITE IN
                        <foreach collection="paramCondition.sites" item="item" index="index" separator=","  open="(" close=")">
                            #{item}
                        </foreach>
                    </if>
                    AND D.FISCAL_PERIOD = #{paramCondition.fiscalPeriod}
                    AND D.CONFIRM_STATUS = 0
                GROUP BY
                    D.FISCAL_PERIOD,
                    NVL(D.REPORT_TYPE,'0'),
                    D.INCOME_TYPE,
                    D.SHOP_NAME,
                    D.SITE,
                    D.ACCOUNTING_CURRENCY
            ) F ON F.FISCAL_PERIOD = E.FISCAL_PERIOD
                AND NVL(F.REPORT_TYPE,'0') = NVL(E.REPORT_TYPE,'0')
                AND F.INCOME_TYPE = E.INCOME_TYPE
                AND F.SHOP_NAME = E.SHOP_NAME
                AND F.SITE = E.SITE
        ) C ON (
            C.FISCAL_PERIOD = B.FISCAL_PERIOD
            AND NVL(C.REPORT_TYPE,'0') = NVL(B.REPORT_TYPE,'0')
            AND C.INCOME_TYPE = B.INCOME_TYPE
            AND C.SHOP_NAME = B.SHOP_NAME
            AND C.SITE = B.SITE
        )
        WHEN MATCHED THEN
            UPDATE SET
                B.CREATE_BY = #{paramCondition.confirmBy},
                B.CREATE_AT = #{paramCondition.confirmDate},
                B.INCOME = B.INCOME + C.TOTAL_INCOME,
                B.SALES_EXCLUDING_TAX = B.SALES_EXCLUDING_TAX + C.SALES_EXCLUDING_TAX,
                B.TAX = B.TAX + C.TAX,
                B.SALES_PROMOTION = B.SALES_PROMOTION + C.SALES_PROMOTION,
                B.REFUND = B.REFUND + C.REFUND,
                B.REFUND_PROMOTION = B.REFUND_PROMOTION + C.REFUND_PROMOTION,
                B.GIFTWARP_SHIPPING = B.GIFTWARP_SHIPPING + C.GIFTWARP_SHIPPING,
                B.COMMISSION = B.COMMISSION + C.COMMISSION,
                B.AMAZON_FEES = B.AMAZON_FEES + C.AMAZON_FEES,
                B.REFUND_COMMISSION = B.REFUND_COMMISSION + C.REFUND_COMMISSION,
                B.REIMBURSEMENT = B.REIMBURSEMENT + C.REIMBURSEMENT,
                B.GOODWILL = B.GOODWILL + C.GOODWILL,
                B.OTHER = B.OTHER + C.OTHER,
                B.WITHHELD_TAX = B.WITHHELD_TAX + C.WITHHELD_TAX,
                B.REMOVAL_DEAL = B.REMOVAL_DEAL + C.REMOVAL_DEAL,
                B.DISPOSE_FEE = B.DISPOSE_FEE + C.DISPOSE_FEE
        WHEN NOT MATCHED THEN
            INSERT
            (
                B.FISCAL_PERIOD,
                B.REPORT_TYPE,
                B.INCOME_TYPE,
                B.SHOP_NAME,
                B.SITE,
                B.ACCOUNTING_CURRENCY,
                B.PRODUCT_TYPE,
                B.DEPARTMENT,
                B.TEAM,
                B.SALES_BRAND,
                B.VOLUME_NORMAL,
                B.CREATE_BY,
                B.CREATE_AT,
                B.CONFIRM_STATUS,
                B.INCOME,
                B.INCOME_PROPORTION,
                B.SALES_EXCLUDING_TAX,
                B.TAX,
                B.SALES_PROMOTION,
                B.REFUND,
                B.REFUND_PROMOTION,
                B.GIFTWARP_SHIPPING,
                B.COMMISSION,
                B.AMAZON_FEES,
                B.REFUND_COMMISSION,
                B.REIMBURSEMENT,
                B.GOODWILL,
                B.OTHER,
                B.WITHHELD_TAX,
                B.REMOVAL_DEAL,
                B.DISPOSE_FEE
            )
            VALUES(
                C.FISCAL_PERIOD,
                NVL(C.REPORT_TYPE,'0'),
                C.INCOME_TYPE,
                C.SHOP_NAME,
                C.SITE,
                C.ACCOUNTING_CURRENCY,
                C.PRODUCT_TYPE,
                '0',
                '0',
                '0',
                0,
                #{paramCondition.confirmBy},
                #{paramCondition.confirmDate},
                0,
                C.TOTAL_INCOME,
                1,
                C.SALES_EXCLUDING_TAX,
                C.TAX,
                C.SALES_PROMOTION,
                C.REFUND,
                C.REFUND_PROMOTION,
                C.GIFTWARP_SHIPPING,
                C.COMMISSION,
                C.AMAZON_FEES,
                C.REFUND_COMMISSION,
                C.REIMBURSEMENT,
                C.GOODWILL,
                C.OTHER,
                C.WITHHELD_TAX,
                C.REMOVAL_DEAL,
                C.DISPOSE_FEE
            )
    </update>

    <!--将结算单明细（美金）批量拆分到无需分摊站内费用表-->
    <update id="insertOrUpdateNoStationAllocation" parameterType="com.tadpole.cloud.platformSettlement.api.finance.model.params.SettlementDetailUsdParam">
        MERGE INTO (SELECT * FROM RP_NO_STATION_ALLOCATION WHERE CONFIRM_STATUS = 0) T1
        USING (
            SELECT
                A.FISCAL_PERIOD,
                A.REPORT_TYPE,
                A.INCOME_TYPE,
                A.SHOP_NAME,
                A.SITE,
                A.ACCOUNTING_CURRENCY,
                A.SKU,
                A.DEPARTMENT,
                A.TEAM,
                A.MATERIAL_CODE,
                MAX(A.PRODUCT_TYPE) PRODUCT_TYPE,
                MAX(A.SALES_BRAND) SALES_BRAND,
                SUM(A.VOLUME_NORMAL) VOLUME_NORMAL,
                SUM(A.VOLUME_REISSUE) VOLUME_REISSUE,
                SUM(A.SALES_EXCLUDING_TAX) SALES_EXCLUDING_TAX,
                SUM(A.TAX) TAX,
                SUM(A.SALES_PROMOTION) SALES_PROMOTION,
                SUM(A.REFUND) REFUND,
                SUM(A.REFUND_PROMOTION) REFUND_PROMOTION,
                SUM(A.GIFTWARP_SHIPPING) GIFTWARP_SHIPPING,
                SUM(A.COMMISSION) COMMISSION,
                SUM(A.REFUND_COMMISSION) REFUND_COMMISSION,
                SUM(A.GOODWILL) GOODWILL,
                SUM(A.AMAZON_FEES) AMAZON_FEES,
                SUM(A.REIMBURSEMENT) REIMBURSEMENT,
                SUM(A.OTHER) OTHER,
                SUM(A.WITHHELD_TAX) WITHHELD_TAX,
                SUM(A.REMOVAL_DEAL) REMOVAL_DEAL,
                SUM(A.DISPOSE_FEE) DISPOSE_FEE
            FROM
                RP_SETTLEMENT_DETAIL_USD A
            WHERE
                A.SKU != '0'
                AND A.INCOME_TYPE IN ('预估', '确认')
                AND A.SHOP_NAME = #{paramCondition.shopName}
                <if test="paramCondition.sites != null and paramCondition.sites.size() > 0">
                    AND A.SITE IN
                    <foreach collection="paramCondition.sites" item="item" index="index" separator=","  open="(" close=")">
                        #{item}
                    </foreach>
                </if>
                AND A.FISCAL_PERIOD = #{paramCondition.fiscalPeriod}
                AND A.CONFIRM_STATUS = 0
            GROUP BY
                A.FISCAL_PERIOD,
                A.REPORT_TYPE,
                A.INCOME_TYPE,
                A.SHOP_NAME,
                A.SITE,
                A.ACCOUNTING_CURRENCY,
                A.SKU,
                A.DEPARTMENT,
                A.TEAM,
                A.MATERIAL_CODE
        ) T2 ON (
            T1.FISCAL_PERIOD = T2.FISCAL_PERIOD
            AND T1.REPORT_TYPE = T2.REPORT_TYPE
            AND T1.INCOME_TYPE = T2.INCOME_TYPE
            AND T1.SHOP_NAME = T2.SHOP_NAME
            AND T1.SITE = T2.SITE
            AND T1.SKU = T2.SKU
            AND T1.DEPARTMENT = T2.DEPARTMENT
            AND T1.TEAM = T2.TEAM
            AND T1.MATERIAL_CODE =T2.MATERIAL_CODE
        )
        WHEN NOT MATCHED THEN
            INSERT
            (
                T1.CREATE_BY,
                T1.CREATE_AT,
                T1.FISCAL_PERIOD,
                T1.REPORT_TYPE,
                T1.INCOME_TYPE,
                T1.SHOP_NAME,
                T1.SITE,
                T1.ACCOUNTING_CURRENCY,
                T1.SKU,
                T1.DEPARTMENT,
                T1.TEAM,
                T1.MATERIAL_CODE,
                T1.PRODUCT_TYPE,
                T1.SALES_BRAND,
                T1.VOLUME_NORMAL,
                T1.VOLUME_REISSUE,
                T1.SALES_EXCLUDING_TAX,
                T1.TAX,
                T1.SALES_PROMOTION,
                T1.REFUND,
                T1.REFUND_PROMOTION,
                T1.GIFTWARP_SHIPPING,
                T1.COMMISSION,
                T1.REFUND_COMMISSION,
                T1.GOODWILL,
                T1.AMAZON_FEES,
                T1.REIMBURSEMENT,
                T1.OTHER,
                T1.WITHHELD_TAX,
                T1.REMOVAL_DEAL,
                T1.DISPOSE_FEE
            )
            VALUES
            (
                #{paramCondition.confirmBy},
                #{paramCondition.confirmDate},
                T2.FISCAL_PERIOD,
                T2.REPORT_TYPE,
                T2.INCOME_TYPE,
                T2.SHOP_NAME,
                T2.SITE,
                T2.ACCOUNTING_CURRENCY,
                T2.SKU,
                T2.DEPARTMENT,
                T2.TEAM,
                T2.MATERIAL_CODE,
                T2.PRODUCT_TYPE,
                T2.SALES_BRAND,
                T2.VOLUME_NORMAL,
                T2.VOLUME_REISSUE,
                T2.SALES_EXCLUDING_TAX,
                T2.TAX,
                T2.SALES_PROMOTION,
                T2.REFUND,
                T2.REFUND_PROMOTION,
                T2.GIFTWARP_SHIPPING,
                T2.COMMISSION,
                T2.REFUND_COMMISSION,
                T2.GOODWILL,
                T2.AMAZON_FEES,
                T2.REIMBURSEMENT,
                T2.OTHER,
                T2.WITHHELD_TAX,
                T2.REMOVAL_DEAL,
                T2.DISPOSE_FEE
            )
            WHEN MATCHED THEN
                UPDATE SET
                    T1.CREATE_BY = #{paramCondition.confirmBy},
                    T1.CREATE_AT = #{paramCondition.confirmDate},
                    T1.VOLUME_NORMAL = T1.VOLUME_NORMAL + T2.VOLUME_NORMAL ,
                    T1.VOLUME_REISSUE = T1.VOLUME_REISSUE + T2.VOLUME_REISSUE,
                    T1.SALES_EXCLUDING_TAX = T1.SALES_EXCLUDING_TAX + T2.SALES_EXCLUDING_TAX,
                    T1.TAX= T1.TAX + T2.TAX,
                    T1.SALES_PROMOTION = T1.SALES_PROMOTION + T2.SALES_PROMOTION,
                    T1.REFUND = T1.REFUND + T2.REFUND,
                    T1.REFUND_PROMOTION = T1.REFUND_PROMOTION + T2.REFUND_PROMOTION,
                    T1.GIFTWARP_SHIPPING = T1.GIFTWARP_SHIPPING + T2.GIFTWARP_SHIPPING,
                    T1.COMMISSION = T1.COMMISSION + T2.COMMISSION,
                    T1.REFUND_COMMISSION = T1.REFUND_COMMISSION + T2.REFUND_COMMISSION,
                    T1.GOODWILL = T1.GOODWILL + T2.GOODWILL,
                    T1.AMAZON_FEES = T1.AMAZON_FEES + T2.AMAZON_FEES,
                    T1.REIMBURSEMENT = T1.REIMBURSEMENT + T2.REIMBURSEMENT,
                    T1.OTHER = T1.OTHER + T2.OTHER,
                    T1.WITHHELD_TAX = T1.WITHHELD_TAX + T2.WITHHELD_TAX,
                    T1.REMOVAL_DEAL = T1.REMOVAL_DEAL + T2.REMOVAL_DEAL,
                    T1.DISPOSE_FEE = T1.DISPOSE_FEE + T2.DISPOSE_FEE
    </update>

    <!--将结算单明细（美金）批量拆分到无需分摊调整表-->
    <update id="insertOrUpdateNoAllocationAdjust" parameterType="com.tadpole.cloud.platformSettlement.api.finance.model.params.SettlementDetailUsdParam">
        MERGE INTO (SELECT * FROM RP_NO_ALLOCATION_ADJUST WHERE CONFIRM_STATUS = 0 ) T1
        USING (
            SELECT
                A.FISCAL_PERIOD,
                A.REPORT_TYPE,
                A.INCOME_TYPE,
                A.SHOP_NAME,
                A.SITE,
                A.ACCOUNTING_CURRENCY,
                A.SKU,
                A.DEPARTMENT,
                A.TEAM,
                A.MATERIAL_CODE,
                A.PRODUCT_TYPE,
                A.SALES_BRAND,
                SUM(A.VOLUME_NORMAL) VOLUME_NORMAL,
                SUM(A.VOLUME_REISSUE) VOLUME_REISSUE,
                SUM(A.SALES_EXCLUDING_TAX) SALES_EXCLUDING_TAX,
                SUM(A.TAX) TAX,
                SUM(A.SALES_PROMOTION) SALES_PROMOTION,
                SUM(A.REFUND) REFUND,
                SUM(A.REFUND_PROMOTION) REFUND_PROMOTION,
                SUM(A.GIFTWARP_SHIPPING) GIFTWARP_SHIPPING,
                SUM(A.COMMISSION) COMMISSION,
                SUM(A.REFUND_COMMISSION) REFUND_COMMISSION,
                SUM(A.GOODWILL) GOODWILL,
                SUM(A.AMAZON_FEES) AMAZON_FEES,
                SUM(A.REIMBURSEMENT) REIMBURSEMENT,
                SUM(A.OTHER) OTHER,
                SUM(A.WITHHELD_TAX) WITHHELD_TAX,
                SUM(A.REMOVAL_DEAL) REMOVAL_DEAL,
                SUM(A.DISPOSE_FEE) DISPOSE_FEE
            FROM
                RP_SETTLEMENT_DETAIL_USD A
            WHERE
                A.SKU != '0'
                AND A.INCOME_TYPE = '调整'
                AND A.SHOP_NAME = #{paramCondition.shopName}
                <if test="paramCondition.sites != null and paramCondition.sites.size() > 0">
                    AND A.SITE IN
                    <foreach collection="paramCondition.sites" item="item" index="index" separator=","  open="(" close=")">
                        #{item}
                    </foreach>
                </if>
                AND A.FISCAL_PERIOD = #{paramCondition.fiscalPeriod}
                AND A.CONFIRM_STATUS = 0
            GROUP BY
                A.FISCAL_PERIOD,
                A.REPORT_TYPE,
                A.INCOME_TYPE,
                A.SHOP_NAME,
                A.SITE,
                A.ACCOUNTING_CURRENCY,
                A.SKU,
                A.DEPARTMENT,
                A.TEAM,
                A.MATERIAL_CODE,
                A.PRODUCT_TYPE,
                A.SALES_BRAND
        ) T2 ON (
            T1.FISCAL_PERIOD = T2.FISCAL_PERIOD
            AND T1.REPORT_TYPE = T2.REPORT_TYPE
            AND T1.INCOME_TYPE = T2.INCOME_TYPE
            AND T1.SHOP_NAME = T2.SHOP_NAME
            AND T1.SITE = T2.SITE
            AND T1.SKU = T2.SKU
            AND T1.DEPARTMENT = T2.DEPARTMENT
            AND T1.TEAM = T2.TEAM
            AND T1.MATERIAL_CODE =T2.MATERIAL_CODE
        )
        WHEN NOT MATCHED THEN
            INSERT
            (
                T1.CREATE_BY,
                T1.CREATE_AT,
                T1.FISCAL_PERIOD,
                T1.REPORT_TYPE,
                T1.INCOME_TYPE,
                T1.SHOP_NAME,
                T1.SITE,
                T1.SKU,
                T1.DEPARTMENT,
                T1.TEAM,
                T1.MATERIAL_CODE,
                T1.SALES_BRAND,
                T1.PRODUCT_TYPE,
                T1.VOLUME_NORMAL,
                T1.VOLUME_REISSUE,
                T1.SALES_EXCLUDING_TAX,
                T1.TAX,
                T1.SALES_PROMOTION,
                T1.REFUND,
                T1.REFUND_PROMOTION,
                T1.GIFTWARP_SHIPPING,
                T1.COMMISSION,
                T1.REFUND_COMMISSION,
                T1.GOODWILL,
                T1.AMAZON_FEES,
                T1.REIMBURSEMENT,
                T1.OTHER,
                T1.WITHHELD_TAX,
                T1.REMOVAL_DEAL,
                T1.DISPOSE_FEE
            )
            VALUES
            (
                #{paramCondition.confirmBy},
                #{paramCondition.confirmDate},
                T2.FISCAL_PERIOD,
                T2.REPORT_TYPE,
                T2.INCOME_TYPE,
                T2.SHOP_NAME,
                T2.SITE,
                T2.SKU,
                T2.DEPARTMENT,
                T2.TEAM,
                T2.MATERIAL_CODE,
                T2.SALES_BRAND,
                T2.PRODUCT_TYPE,
                T2.VOLUME_NORMAL,
                T2.VOLUME_REISSUE,
                T2.SALES_EXCLUDING_TAX,
                T2.TAX,
                T2.SALES_PROMOTION,
                T2.REFUND,
                T2.REFUND_PROMOTION,
                T2.GIFTWARP_SHIPPING,
                T2.COMMISSION,
                T2.REFUND_COMMISSION,
                T2.GOODWILL,
                T2.AMAZON_FEES,
                T2.REIMBURSEMENT,
                T2.OTHER,
                T2.WITHHELD_TAX,
                T2.REMOVAL_DEAL,
                T2.DISPOSE_FEE
            )
            WHEN MATCHED THEN
                UPDATE SET
                    T1.CREATE_BY = #{paramCondition.confirmBy},
                    T1.CREATE_AT = #{paramCondition.confirmDate},
                    T1.VOLUME_NORMAL = T1.VOLUME_NORMAL + T2.VOLUME_NORMAL ,
                    T1.VOLUME_REISSUE = T1.VOLUME_REISSUE + T2.VOLUME_REISSUE,
                    T1.SALES_EXCLUDING_TAX = T1.SALES_EXCLUDING_TAX + T2.SALES_EXCLUDING_TAX,
                    T1.TAX= T1.TAX + T2.TAX,
                    T1.SALES_PROMOTION = T1.SALES_PROMOTION + T2.SALES_PROMOTION,
                    T1.REFUND = T1.REFUND + T2.REFUND,
                    T1.REFUND_PROMOTION = T1.REFUND_PROMOTION + T2.REFUND_PROMOTION,
                    T1.GIFTWARP_SHIPPING = T1.GIFTWARP_SHIPPING + T2.GIFTWARP_SHIPPING,
                    T1.COMMISSION = T1.COMMISSION + T2.COMMISSION,
                    T1.REFUND_COMMISSION = T1.REFUND_COMMISSION + T2.REFUND_COMMISSION,
                    T1.GOODWILL = T1.GOODWILL + T2.GOODWILL,
                    T1.AMAZON_FEES = T1.AMAZON_FEES + T2.AMAZON_FEES,
                    T1.REIMBURSEMENT = T1.REIMBURSEMENT + T2.REIMBURSEMENT,
                    T1.OTHER = T1.OTHER + T2.OTHER,T1.WITHHELD_TAX = T1.WITHHELD_TAX + T2.WITHHELD_TAX,
                    T1.REMOVAL_DEAL = T1.REMOVAL_DEAL + T2.REMOVAL_DEAL,
                    T1.DISPOSE_FEE = T1.DISPOSE_FEE + T2.DISPOSE_FEE
    </update>

    <!--将结算单明细（美金）批量拆分到手动分摊调整表-->
    <update id="insertOrUpdateManualAllocationAdjust" parameterType="com.tadpole.cloud.platformSettlement.api.finance.model.params.SettlementDetailUsdParam">
        MERGE INTO (SELECT * FROM RP_MANUAL_ALLOCATION_ADJUST WHERE CONFIRM_STATUS = 0) T1
        USING (
            SELECT
                A.FISCAL_PERIOD,
                A.REPORT_TYPE,
                A.INCOME_TYPE,
                A.SHOP_NAME,
                A.SITE,
                A.ACCOUNTING_CURRENCY,
                A.SKU,
                A.DEPARTMENT,
                A.TEAM,
                A.MATERIAL_CODE,
                A.PRODUCT_TYPE,
                A.SALES_BRAND,
                SUM(A.VOLUME_NORMAL) VOLUME_NORMAL,
                SUM(A.VOLUME_REISSUE) VOLUME_REISSUE,
                SUM(A.SALES_EXCLUDING_TAX) SALES_EXCLUDING_TAX,
                SUM(A.TAX) TAX,
                SUM(A.SALES_PROMOTION) SALES_PROMOTION,
                SUM(A.REFUND) REFUND,
                SUM(A.REFUND_PROMOTION) REFUND_PROMOTION,
                SUM(A.GIFTWARP_SHIPPING) GIFTWARP_SHIPPING,
                SUM(A.COMMISSION) COMMISSION,
                SUM(A.REFUND_COMMISSION) REFUND_COMMISSION,
                SUM(A.GOODWILL) GOODWILL,
                SUM(A.AMAZON_FEES) AMAZON_FEES,
                SUM(A.REIMBURSEMENT) REIMBURSEMENT,
                SUM(A.OTHER) OTHER,
                SUM(A.WITHHELD_TAX) WITHHELD_TAX,
                SUM(A.REMOVAL_DEAL) REMOVAL_DEAL,
                SUM(A.DISPOSE_FEE) DISPOSE_FEE,
                SUM(A.ADVERTISING) ADVERTISING,
                SUM(A.STORAGE_FEE) STORAGE_FEE
            FROM
                RP_SETTLEMENT_DETAIL_USD A
            WHERE
                A.SKU = '0'
                AND A.INCOME_TYPE = '调整'
                AND A.SHOP_NAME = #{paramCondition.shopName}
                <if test="paramCondition.sites != null and paramCondition.sites.size() > 0">
                    AND A.SITE IN
                    <foreach collection="paramCondition.sites" item="item" index="index" separator=","  open="(" close=")">
                        #{item}
                    </foreach>
                </if>
                AND A.FISCAL_PERIOD = #{paramCondition.fiscalPeriod}
                AND A.CONFIRM_STATUS = 0
            GROUP BY
                A.FISCAL_PERIOD,
                A.REPORT_TYPE,
                A.INCOME_TYPE,
                A.SHOP_NAME,
                A.SITE,
                A.ACCOUNTING_CURRENCY,
                A.SKU,
                A.DEPARTMENT,
                A.TEAM,
                A.MATERIAL_CODE,
                A.PRODUCT_TYPE,
                A.SALES_BRAND
        ) T2 ON (
            T1.FISCAL_PERIOD = T2.FISCAL_PERIOD
            AND T1.REPORT_TYPE = T2.REPORT_TYPE
            AND T1.INCOME_TYPE = T2.INCOME_TYPE
            AND T1.SHOP_NAME = T2.SHOP_NAME
            AND T1.SITE = T2.SITE
            AND T1.SKU = T2.SKU
            AND T1.DEPARTMENT = T2.DEPARTMENT
            AND T1.TEAM = T2.TEAM
            AND T1.PRODUCT_TYPE = T2.PRODUCT_TYPE
            AND T1.CONFIRM_STATUS = 0
        )
        WHEN NOT MATCHED THEN
            INSERT
            (
                T1.CREATE_BY,
                T1.CREATE_AT,
                T1.FISCAL_PERIOD,
                T1.REPORT_TYPE,
                T1.INCOME_TYPE,
                T1.SHOP_NAME,
                T1.SITE,
                T1.SKU,
                T1.DEPARTMENT,
                T1.TEAM,
                T1.PRODUCT_TYPE,
                T1.VOLUME_NORMAL,
                T1.VOLUME_REISSUE,
                T1.SALES_EXCLUDING_TAX,
                T1.TAX,T1.SALES_PROMOTION,
                T1.REFUND,
                T1.REFUND_PROMOTION,
                T1.GIFTWARP_SHIPPING,
                T1.COMMISSION,
                T1.REFUND_COMMISSION,
                T1.GOODWILL,
                T1.AMAZON_FEES,
                T1.STORAGE_FEE,
                T1.REIMBURSEMENT,
                T1.OTHER,
                T1.WITHHELD_TAX,
                T1.REMOVAL_DEAL,
                T1.DISPOSE_FEE,
                T1.ADVERTISING
            )
            VALUES
            (
                #{paramCondition.confirmBy},
                #{paramCondition.confirmDate},
                T2.FISCAL_PERIOD,
                T2.REPORT_TYPE,
                T2.INCOME_TYPE,
                T2.SHOP_NAME,
                T2.SITE,
                T2.SKU,
                T2.DEPARTMENT,
                T2.TEAM,
                '0',
                T2.VOLUME_NORMAL,
                T2.VOLUME_REISSUE,
                T2.SALES_EXCLUDING_TAX,
                T2.TAX,
                T2.SALES_PROMOTION,
                T2.REFUND,
                T2.REFUND_PROMOTION,
                T2.GIFTWARP_SHIPPING,
                T2.COMMISSION,
                T2.REFUND_COMMISSION,
                T2.GOODWILL,
                T2.AMAZON_FEES,
                T2.STORAGE_FEE,
                T2.REIMBURSEMENT,
                T2.OTHER,
                T2.WITHHELD_TAX,
                T2.REMOVAL_DEAL,
                T2.DISPOSE_FEE,
                T2.ADVERTISING
            )
            WHEN MATCHED THEN
                UPDATE SET
                    T1.CREATE_BY = #{paramCondition.confirmBy},
                    T1.CREATE_AT = #{paramCondition.confirmDate},
                    T1.VOLUME_NORMAL = T1.VOLUME_NORMAL + T2.VOLUME_NORMAL ,
                    T1.VOLUME_REISSUE = T1.VOLUME_REISSUE + T2.VOLUME_REISSUE,
                    T1.SALES_EXCLUDING_TAX = T1.SALES_EXCLUDING_TAX + T2.SALES_EXCLUDING_TAX,
                    T1.TAX= T1.TAX + T2.TAX,
                    T1.SALES_PROMOTION = T1.SALES_PROMOTION + T2.SALES_PROMOTION,
                    T1.REFUND = T1.REFUND + T2.REFUND,
                    T1.REFUND_PROMOTION = T1.REFUND_PROMOTION + T2.REFUND_PROMOTION,
                    T1.GIFTWARP_SHIPPING = T1.GIFTWARP_SHIPPING + T2.GIFTWARP_SHIPPING,
                    T1.COMMISSION = T1.COMMISSION + T2.COMMISSION,
                    T1.REFUND_COMMISSION = T1.REFUND_COMMISSION + T2.REFUND_COMMISSION,
                    T1.GOODWILL = T1.GOODWILL + T2.GOODWILL,
                    T1.AMAZON_FEES = T1.AMAZON_FEES + T2.AMAZON_FEES,
                    T1.STORAGE_FEE = T1.STORAGE_FEE + T2.STORAGE_FEE,
                    T1.REIMBURSEMENT = T1.REIMBURSEMENT + T2.REIMBURSEMENT,
                    T1.OTHER = T1.OTHER + T2.OTHER,T1.WITHHELD_TAX = T1.WITHHELD_TAX + T2.WITHHELD_TAX,
                    T1.REMOVAL_DEAL = T1.REMOVAL_DEAL + T2.REMOVAL_DEAL,
                    T1.DISPOSE_FEE = T1.DISPOSE_FEE + T2.DISPOSE_FEE,
                    T1.ADVERTISING = T1.ADVERTISING + T2.ADVERTISING
    </update>

    <!--批量更新结算单明细（美金）确认信息-->
    <update id="updateConfirmDetailUsd" parameterType = "com.tadpole.cloud.platformSettlement.api.finance.model.params.SettlementDetailUsdParam">
        UPDATE RP_SETTLEMENT_DETAIL_USD
        SET
            CONFIRM_BY = #{paramCondition.confirmBy},
            CONFIRM_DATE = #{paramCondition.confirmDate},
            CONFIRM_STATUS = 1
        WHERE
            SHOP_NAME = #{paramCondition.shopName}
            <if test="paramCondition.sites != null and paramCondition.sites.size() > 0">
                AND SITE IN
                <foreach collection="paramCondition.sites" item="item" index="index" separator=","  open="(" close=")">
                    #{item}
                </foreach>
            </if>
            AND FISCAL_PERIOD = #{paramCondition.fiscalPeriod}
            AND CONFIRM_STATUS = 0
    </update>
</mapper>
