<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
  namespace="com.tadpole.cloud.platformSettlement.modular.inventory.mapper.EbmsComingInventoryMapper">

  <!--在途库存列表-->
  <select id="customPageList"
    resultType="com.tadpole.cloud.platformSettlement.api.inventory.entity.EbmsComingInventory">
    SELECT
      m.PLATFORM,
      m.SHOP_NAME,
      m.SITE,
      m.SKU,
      m.FBA_NUMBER,
      m.MATERIAL_CODE,
      m.STATICS_DATE,
      m.LOGISTICS_NUMBER + m.SEA_NUMBER + m.TRAIN_NUMBER + m.CAR_NUMBER + m.AIR_NUMBER TOTAL_COMING_NUMBER ,
      m.LOGISTICS_NUMBER,
      m.SEA_NUMBER,
      m.TRAIN_NUMBER,
      m.CAR_NUMBER,
      m.AIR_NUMBER,
      m.INVENTORY_ORGANIZATION_CODE
    FROM EBMS_COMING_INVENTORY m
    <where>
      <if test="paramCondition.shopName != null and paramCondition.shopName.size>0">
        AND m.SHOP_NAME IN
        <foreach collection="paramCondition.shopName" open="(" close=")" separator=","
          item="shopName">
          #{shopName}
        </foreach>
      </if>
      <if test="paramCondition.site != null and paramCondition.site.size>0">
        AND m.site IN
        <foreach collection="paramCondition.site" open="(" close=")" separator="," item="site">
          #{site}
        </foreach>
      </if>
      <if test="paramCondition.skus != null and paramCondition.skus.size>0">
        AND m.sku IN
        <foreach collection="paramCondition.skus" open="(" close=")" separator="," item="sku">
          #{sku}
        </foreach>
      </if>
      <if test="paramCondition.materialCodeList != null and paramCondition.materialCodeList.size>0">
        AND m.MATERIAL_CODE IN
        <foreach collection="paramCondition.materialCodeList" open="(" close=")" separator="," item="item">
          #{sku}
        </foreach>
      </if>
      <if
        test="paramCondition.startDate != null and paramCondition.startDate != '' and paramCondition.endDate != null and paramCondition.endDate != ''">
        AND m.STATICS_DATE BETWEEN
        to_date(#{paramCondition.startDate},'YYYY-MM-DD HH24:MI:SS') AND
        to_date(#{paramCondition.endDate},'YYYY-MM-DD HH24:MI:SS')+1 - INTERVAL '1' SECOND
      </if>

      <choose>
        <when test="paramCondition.inventoryOrganizationCode != null and paramCondition.inventoryOrganizationCode == '空'.toString()">
          AND m.INVENTORY_ORGANIZATION_CODE IS NULL
        </when>
        <when test="paramCondition.inventoryOrganizationCode != null and paramCondition.inventoryOrganizationCode != '' and paramCondition.inventoryOrganizationCode != '空'.toString()">
          AND m.INVENTORY_ORGANIZATION_CODE = #{paramCondition.inventoryOrganizationCode}
        </when>
        <otherwise>
        </otherwise>
      </choose>
    </where>
  </select>

  <!--获取数量-->
  <select id="getQty" resultType="java.lang.String" >
    SELECT SUM(NVL(m.LOGISTICS_NUMBER, 0)) || ',' || SUM(NVL(m.LOGISTICS_NUMBER, 0) + NVL(m.SEA_NUMBER, 0) + NVL(m.TRAIN_NUMBER, 0) + NVL(m.CAR_NUMBER, 0) + NVL(m.AIR_NUMBER, 0)) || ',' || SUM(NVL(m.SEA_NUMBER, 0) + NVL(m.TRAIN_NUMBER, 0) + NVL(m.CAR_NUMBER, 0) + NVL(m.AIR_NUMBER, 0))
    FROM EBMS_COMING_INVENTORY m
    <where>
      <if test="paramCondition.shopName != null and paramCondition.shopName.size>0">
        AND m.SHOP_NAME IN
        <foreach collection="paramCondition.shopName" open="(" close=")" separator=","
          item="shopName">
          #{shopName}
        </foreach>
      </if>
      <if test="paramCondition.site != null and paramCondition.site.size>0">
        AND m.site IN
        <foreach collection="paramCondition.site" open="(" close=")" separator="," item="site">
          #{site}
        </foreach>
      </if>
      <if test="paramCondition.skus != null and paramCondition.skus.size>0">
        AND m.sku IN
        <foreach collection="paramCondition.skus" open="(" close=")" separator="," item="sku">
          #{sku}
        </foreach>
      </if>
      <if test="paramCondition.materialCodeList != null and paramCondition.materialCodeList.size>0">
        AND m.MATERIAL_CODE IN
        <foreach collection="paramCondition.materialCodeList" open="(" close=")" separator="," item="item">
          #{sku}
        </foreach>
      </if>
      <if
        test="paramCondition.startDate != null and paramCondition.startDate != '' and paramCondition.endDate != null and paramCondition.endDate != ''">
        AND m.STATICS_DATE BETWEEN
        to_date(#{paramCondition.startDate},'YYYY-MM-DD HH24:MI:SS') AND
        to_date(#{paramCondition.endDate},'YYYY-MM-DD HH24:MI:SS')+1 - INTERVAL '1' SECOND
      </if>

      <choose>
        <when test="paramCondition.inventoryOrganizationCode != null and paramCondition.inventoryOrganizationCode == '空'.toString()">
          AND m.INVENTORY_ORGANIZATION_CODE IS NULL
        </when>
        <when test="paramCondition.inventoryOrganizationCode != null and paramCondition.inventoryOrganizationCode != '' and paramCondition.inventoryOrganizationCode != '空'.toString()">
          AND m.INVENTORY_ORGANIZATION_CODE = #{paramCondition.inventoryOrganizationCode}
        </when>
        <otherwise>
        </otherwise>
      </choose>
    </where>
  </select>

  <!--Monthly Inventory History生成期末库存列表获取EBMS在途库存数据-->
  <select id="getComingInventoryList" resultType="com.tadpole.cloud.platformSettlement.api.inventory.entity.EbmsComingInventory">
    SELECT
      'Amazon' AS PLATFORM,
      C.shopNameSimple AS SHOP_NAME,
      C.countryCode AS SITE,
      C.sku,
      C.shipmentID AS FBA_NUMBER,
      C.matCode AS MATERIAL_CODE,
      C.sysStatisticalDate AS STATICS_DATE,
      C.allQty AS TOTAL_COMING_NUMBER,
      C.stayDeliverQty AS LOGISTICS_NUMBER,
      C.shippingQty AS SEA_NUMBER,
      C.trainQty AS TRAIN_NUMBER,
      C.carQty AS CAR_NUMBER,
      C.airQty AS AIR_NUMBER,
      getdate() AS ETL_TIME,
      C.id AS PARENT_ID
    FROM TbAmazonInGoodsQtyNewV2 C
  </select>

  <!--根据组织刷库存组织编码-->
  <update id="refreshOrgCode">
    MERGE INTO EBMS_COMING_INVENTORY A
    USING (
        SELECT
            WC.ORGANIZATION_CODE,
            WC.ORGANIZATION_NAME
        FROM ERP_WAREHOUSE_CODE WC
        GROUP BY
            WC.ORGANIZATION_CODE,
            WC.ORGANIZATION_NAME
    ) C ON (A.ORG = C.ORGANIZATION_NAME)
    WHEN MATCHED THEN
      UPDATE SET A.INVENTORY_ORGANIZATION_CODE = C.ORGANIZATION_CODE
      WHERE A.INVENTORY_ORGANIZATION_CODE IS NULL
        AND A.ORG IS NOT NULL
  </update>
</mapper>
