<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tadpole.cloud.supplyChain.modular.logistics.mapper.TgCustomsClearanceDetailMapper">

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        D.ID,D.PID,D.PACK_CODE,D.BOX_NO,D.PACK_DIRECT_CODE,D.MATERIAL_CODE,D.SKU,C.ARRIVAL_COUNTRY_CODE,C.CURRENCY,
        DECODE(A6.INDIRECT_RATE, NULL, AT6.INDIRECT_RATE,A6.INDIRECT_RATE) AS INDIRECT_RATE,
        T2.K3_PRICE,
        ROUND(DECODE(T2.K3_PRICE, NULL, NULL, T2.K3_PRICE * DECODE(A6.INDIRECT_RATE, NULL, AT6.INDIRECT_RATE,A6.INDIRECT_RATE)), 2) AS UNIT_PRICE,
		C.PRICE_TYPE AS TOP_PRICE_TYPE,C.CUSTOMS_COEFF AS TOP_CUSTOMS_COEFF,
-- 		DECODE(A5.LISTING_PRICE, NULL, A5.PRICE, A5.LISTING_PRICE) AS amazonSalePriceTemp,
--         DECODE(A5.ASIN, NULL, NULL, A4.AMAZON_URL || 'dp/' || A5.ASIN) AS AMAZON_SALE_LINK,
--         A5.SMALL_IMAGE_URL AS AMAZON_PICTURE_LINK,
		DECODE(A5.LISTING_PRICE, NULL, A5.STANDARD_PRICE, A5.LISTING_PRICE) AS amazonSalePriceTemp,
        DECODE(A5.ASIN, NULL, NULL, A4.AMAZON_URL || 'dp/' || A5.ASIN) AS AMAZON_SALE_LINK,
        A5.MAIN_IMAGE AS AMAZON_PICTURE_LINK,
        D.QUANTITY,D.UNIT,D.ATTRIBUTE,D.SPLIT_ORDER,D.BOX_NO_NAME,D.BOX_TYPE,D.WEIGHT,D.GOODS_LONG,D.WIDE,D.HIGH,D.CREATE_TIME,D.CREATE_USER,D.UPDATE_TIME,D.UPDATE_USER,D.EDIT_STATUS,
        D.AMAZON_SALE_PRICE AS AMAZON_SALE_PRICE_HAND,D.SPECIAL_MERGE_SIGN,D.SPECIAL_MATERIAL_CODE,D.SPECIAL_MATERIAL_ID,
        DECODE(T1.INVOICE_PRO_NAME_CN, NULL, T2.INVOICE_PRO_NAME_CN, T1.INVOICE_PRO_NAME_CN) AS CLEAR_NAME_CN,
        DECODE(T1.INVOICE_PRO_NAME_CN, NULL, T2.INVOICE_PRO_NAME_CN, T1.INVOICE_PRO_NAME_CN) AS INVOICE_PRO_NAME_CN,
        DECODE(T1.INVOICE_PRO_NAME_EN, NULL, T2.INVOICE_PRO_NAME_EN, T1.INVOICE_PRO_NAME_EN) AS INVOICE_PRO_NAME_EN,
        DECODE(T1.HSCODE, NULL, T2.HSCODE, T1.HSCODE) AS HSCODE,
        DECODE(DECODE(T1.IS_CHARGED, NULL, T2.IS_CHARGED, T1.IS_CHARGED), '0', '否', '1', '是', NULL) AS IS_CHARGED,
        DECODE(DECODE(T1.IS_MAGNET, NULL, T2.IS_MAGNET, T1.IS_MAGNET), '0', '否', '1', '是', NULL) AS IS_MAGNET,
        DECODE(T1.CLEAR_MATERIAL_EN, NULL, T2.CLEAR_MATERIAL_EN, T1.CLEAR_MATERIAL_EN) AS CLEAR_MATERIAL_EN,
        DECODE(T1.FIT_BRAND, NULL, T2.FIT_BRAND, T1.FIT_BRAND) AS FIT_BRAND,
        DECODE(T1.FIT_BRAND, NULL, T2.FIT_BRAND, T1.FIT_BRAND) AS TYPE,
        DECODE(T1.STYLE, NULL, T2.STYLE, T1.STYLE) AS STYLE,
        DECODE(T1.TAX_RATE, NULL, T2.TAX_RATE, T1.TAX_RATE) AS TAX_RATE,
        DECODE(T1.COMPANY_BRAND, NULL, T2.COMPANY_BRAND, T1.COMPANY_BRAND) AS COMPANY_BRAND,
        DECODE(D.SPECIAL_MERGE_SIGN, NULL, DECODE(T1.ID, NULL, '未合并', '已合并'), DECODE(D.SPECIAL_MATERIAL_CODE, NULL, '未合并', '已合并')) AS CLEAR_MERGE_STATUS
    </sql>

    <!-- 分页查询列表 -->
    <select id="queryPage"
            parameterType="com.tadpole.cloud.supplyChain.api.logistics.model.params.TgCustomsClearanceDetailParam"
            resultType="com.tadpole.cloud.supplyChain.api.logistics.model.result.TgCustomsClearanceDetailResult">
        SELECT
            <include refid="Base_Column_List"></include>
        FROM TG_CUSTOMS_CLEARANCE C
        LEFT JOIN TG_CUSTOMS_CLEARANCE_DETAIL D ON C.ID = D.PID
        LEFT JOIN
        (
            SELECT
                P.*,
                D.COUNTRY_CODE,
                D.HSCODE,
                D.TAX_RATE
            FROM TG_BASE_PRODUCT P
            LEFT JOIN TG_BASE_PRODUCT_DETAIL D ON P.ID = D.PID
            WHERE P.DATA_TYPE = '1'
        ) T1 ON T1.MATERIAL_CODE LIKE '%' || D.MATERIAL_CODE || '%' AND T1.COUNTRY_CODE = C.ARRIVAL_COUNTRY_CODE AND D.SPECIAL_MERGE_SIGN IS NULL
        LEFT JOIN
        (
            SELECT
                P.*,
                D.COUNTRY_CODE,
                D.HSCODE,
                D.TAX_RATE
            FROM TG_BASE_PRODUCT P
            LEFT JOIN TG_BASE_PRODUCT_DETAIL D ON P.ID = D.PID
            WHERE P.DATA_TYPE = '0'
        ) T2 ON T2.MATERIAL_CODE = DECODE(D.SPECIAL_MERGE_SIGN, NULL, D.MATERIAL_CODE, DECODE(D.SPECIAL_MATERIAL_CODE, NULL, D.MATERIAL_CODE, D.SPECIAL_MATERIAL_CODE)) AND T2.COUNTRY_CODE = C.ARRIVAL_COUNTRY_CODE
        LEFT JOIN TG_COUNTRY_INFO A4 ON C.ARRIVAL_COUNTRY_CODE = A4.COUNTRY_CODE
--         LEFT JOIN TG_LX_LISTING_INFO A5 ON A4.SITE = A5.SITE AND D.SKU = A5.SELLER_SKU AND A5.IS_DELETE = '0'
        LEFT JOIN TG_SAIHU_PRODUCT A5 ON A4.SITE = A5.SITE AND D.SKU = A5.SKU AND A5.DXM_PUBLISH_STATE IS NULL
        LEFT JOIN FINANCE.CW_FIXED_EXCHANGE_RATE A6 ON A6.TARGET_CURRENCY = 'CNY' AND A6.ORIGINAL_CURRENCY = C.CURRENCY AND A6.INEFFECTIVE_DATE >= TO_DATE(TO_CHAR(C.POST_DATE, 'YYYY-MM-DD'), 'YYYY-MM-DD') AND A6.EFFECT_DATE &lt;= TO_DATE(TO_CHAR(C.POST_DATE, 'YYYY-MM-DD'), 'YYYY-MM-DD')
        LEFT JOIN FINANCE.CW_FIXED_EXCHANGE_RATE AT6 ON AT6.TARGET_CURRENCY = 'CNY' AND AT6.ORIGINAL_CURRENCY = C.CURRENCY AND AT6.INEFFECTIVE_DATE >= TO_DATE(TO_CHAR(C.POST_DATE - 15, 'YYYY-MM-DD'), 'YYYY-MM-DD') AND AT6.EFFECT_DATE &lt;= TO_DATE(TO_CHAR(C.POST_DATE -15, 'YYYY-MM-DD'), 'YYYY-MM-DD')
        WHERE D.PID = #{param.pid}
        ORDER BY D.PACK_CODE ASC, TO_NUMBER(D.BOX_NO) ASC, D.ID ASC
    </select>

    <!-- 查询列表: SPECIAL_MERGE_SIGN为空则遵循公共规则，不为空则遵循特殊规则；SPECIAL_MERGE_SIGN不为空 且 SPECIAL_MATERIAL_CODE不为空则遵循特殊规则的主物料 -->
    <select id="queryList"
            parameterType="com.tadpole.cloud.supplyChain.api.logistics.model.params.TgCustomsClearanceDetailParam"
            resultType="com.tadpole.cloud.supplyChain.api.logistics.model.result.TgCustomsClearanceDetailResult">
        SELECT
            TA.*,
            A9.AGAIN_COEFF,
            A10.MIN_CUSTOMS_PRICE,
            ROUND(
                CASE WHEN TA.TOP_PRICE_TYPE IS NOT NULL AND TA.TOP_CUSTOMS_COEFF IS NOT NULL THEN TA.customsUnitPriceTemp
                WHEN TA.customsUnitPriceTemp IS NULL THEN NULL
                WHEN TA.customsUnitPriceTemp IS NOT NULL AND A9.AGAIN_COEFF IS NOT NULL AND A10.MIN_CUSTOMS_PRICE IS NOT NULL THEN DECODE(SIGN((TA.customsUnitPriceTemp * A9.AGAIN_COEFF) - A10.MIN_CUSTOMS_PRICE), -1, A10.MIN_CUSTOMS_PRICE, TA.customsUnitPriceTemp * A9.AGAIN_COEFF)
                WHEN TA.customsUnitPriceTemp IS NOT NULL AND A9.AGAIN_COEFF IS NOT NULL AND A10.MIN_CUSTOMS_PRICE IS NULL THEN TA.customsUnitPriceTemp * A9.AGAIN_COEFF
                WHEN TA.customsUnitPriceTemp IS NOT NULL AND A9.AGAIN_COEFF IS NULL AND A10.MIN_CUSTOMS_PRICE IS NOT NULL THEN DECODE(SIGN(TA.customsUnitPriceTemp - A10.MIN_CUSTOMS_PRICE), -1, A10.MIN_CUSTOMS_PRICE, TA.customsUnitPriceTemp)
                WHEN TA.customsUnitPriceTemp IS NOT NULL AND A9.AGAIN_COEFF IS NULL AND A10.MIN_CUSTOMS_PRICE IS NULL THEN TA.customsUnitPriceTemp
                ELSE NULL END
            , 2) AS CUSTOMS_UNIT_PRICE
        FROM
        (
            SELECT
                TT.*,
                ROUND(
                    CASE WHEN TT.TOP_PRICE_TYPE IS NOT NULL AND TT.TOP_CUSTOMS_COEFF IS NOT NULL THEN DECODE(TT.TOP_PRICE_TYPE, '采购价', DECODE(TT.UNIT_PRICE, NULL, NULL, TT.UNIT_PRICE * TT.TOP_CUSTOMS_COEFF), DECODE(TT.AMAZON_SALE_PRICE, NULL, NULL, TT.AMAZON_SALE_PRICE * TT.TOP_CUSTOMS_COEFF))
                    WHEN TT.PRICE_TYPE IS NULL THEN NULL
                    WHEN TT.PRICE_TYPE = '采购价' THEN DECODE(TT.UNIT_PRICE, NULL, NULL, TT.UNIT_PRICE * TT.CUSTOMS_COEFF)
                    WHEN TT.PRICE_TYPE = '销售价' THEN DECODE(TT.AMAZON_SALE_PRICE, NULL, NULL, TT.AMAZON_SALE_PRICE * TT.CUSTOMS_COEFF)
                    ELSE NULL END
                , 2) AS customsUnitPriceTemp
            FROM
            (
                SELECT
                    T.*,
                    DECODE(T.amazonSalePriceTemp, NULL, DECODE(T.EDIT_STATUS, '人工编辑', T.AMAZON_SALE_PRICE_HAND, NULL), T.amazonSalePriceTemp) AS AMAZON_SALE_PRICE,
                    A7.PRICE_TYPE AS F_PRICE_TYPE,
                    A7.CUSTOMS_COEFF AS F_CUSTOMS_COEFF,
                    A8.PRICE_TYPE AS S_PRICE_TYPE,
                    A8.CUSTOMS_COEFF AS S_CUSTOMS_COEFF,
                    DECODE(A7.PRICE_TYPE, NULL, A8.PRICE_TYPE, A7.PRICE_TYPE) AS PRICE_TYPE,
                    DECODE(A7.CUSTOMS_COEFF, NULL, A8.CUSTOMS_COEFF, A7.CUSTOMS_COEFF) AS CUSTOMS_COEFF
                FROM (
                    SELECT
                        <include refid="Base_Column_List"></include>
                    FROM TG_CUSTOMS_CLEARANCE C
                    LEFT JOIN TG_CUSTOMS_CLEARANCE_DETAIL D ON C.ID = D.PID
                    LEFT JOIN
                    (
                        SELECT
                            P.*,
                            D.COUNTRY_CODE,
                            D.HSCODE,
                            R.CHANGE_TAX_RATE,
                            R.TAX_RATE,
                            R.ADD_TAX_RATE
                        FROM TG_BASE_PRODUCT P
                        LEFT JOIN TG_BASE_PRODUCT_DETAIL D ON P.ID = D.PID
                        LEFT JOIN TG_CUSTOMS_TAX_RATE R ON D.COUNTRY_CODE = R.COUNTRY_CODE AND D.HSCODE = R.HSCODE
                        WHERE P.DATA_TYPE = '1'
                    ) T1 ON T1.MATERIAL_CODE LIKE '%' || D.MATERIAL_CODE || '%' AND T1.COUNTRY_CODE = C.ARRIVAL_COUNTRY_CODE AND D.SPECIAL_MERGE_SIGN IS NULL
                    LEFT JOIN
                    (
                        SELECT
                            P.*,
                            D.COUNTRY_CODE,
                            D.HSCODE,
                            R.CHANGE_TAX_RATE,
                            R.TAX_RATE,
                            R.ADD_TAX_RATE
                        FROM TG_BASE_PRODUCT P
                        LEFT JOIN TG_BASE_PRODUCT_DETAIL D ON P.ID = D.PID
                        LEFT JOIN TG_CUSTOMS_TAX_RATE R ON D.COUNTRY_CODE = R.COUNTRY_CODE AND D.HSCODE = R.HSCODE
                        WHERE P.DATA_TYPE = '0'
                    ) T2 ON T2.MATERIAL_CODE = DECODE(D.SPECIAL_MERGE_SIGN, NULL, D.MATERIAL_CODE, DECODE(D.SPECIAL_MATERIAL_CODE, NULL, D.MATERIAL_CODE, D.SPECIAL_MATERIAL_CODE)) AND T2.COUNTRY_CODE = C.ARRIVAL_COUNTRY_CODE
                    LEFT JOIN TG_COUNTRY_INFO A4 ON C.ARRIVAL_COUNTRY_CODE = A4.COUNTRY_CODE
--                     LEFT JOIN TG_LX_LISTING_INFO A5 ON A4.SITE = A5.SITE AND D.SKU = A5.SELLER_SKU AND A5.IS_DELETE = '0'
                    LEFT JOIN TG_SAIHU_PRODUCT A5 ON A4.SITE = A5.SITE AND D.SKU = A5.SKU AND A5.DXM_PUBLISH_STATE IS NULL
                    LEFT JOIN FINANCE.CW_FIXED_EXCHANGE_RATE A6 ON A6.TARGET_CURRENCY = 'CNY' AND A6.ORIGINAL_CURRENCY = C.CURRENCY AND A6.INEFFECTIVE_DATE >= TO_DATE(TO_CHAR(C.POST_DATE, 'YYYY-MM-DD'), 'YYYY-MM-DD') AND A6.EFFECT_DATE &lt;= TO_DATE(TO_CHAR(C.POST_DATE, 'YYYY-MM-DD'), 'YYYY-MM-DD')
                    LEFT JOIN FINANCE.CW_FIXED_EXCHANGE_RATE AT6 ON AT6.TARGET_CURRENCY = 'CNY' AND AT6.ORIGINAL_CURRENCY = C.CURRENCY AND AT6.INEFFECTIVE_DATE >= TO_DATE(TO_CHAR(C.POST_DATE - 15, 'YYYY-MM-DD'), 'YYYY-MM-DD') AND AT6.EFFECT_DATE &lt;= TO_DATE(TO_CHAR(C.POST_DATE -15, 'YYYY-MM-DD'), 'YYYY-MM-DD')
                    WHERE D.PID = #{param.pid}
                    ORDER BY D.PACK_CODE ASC, TO_NUMBER(D.BOX_NO) ASC, D.ID ASC
                ) T
                LEFT JOIN TG_CUSTOMS_PRICE_COEFF_RULE A7
                ON (
                    A7.COUNTRY_CODE = T.ARRIVAL_COUNTRY_CODE
                    AND A7.HSCODE = T.HSCODE
                    AND (
                        CASE WHEN A7.MIN_CUSTOMS_RATE IS NOT NULL AND A7.MAX_CUSTOMS_RATE IS NOT NULL AND A7.MIN_EQ = '0' AND A7.MAX_EQ = '0' AND A7.MIN_CUSTOMS_RATE &lt; T.TAX_RATE AND A7.MAX_CUSTOMS_RATE > T.TAX_RATE THEN '1'
                        WHEN A7.MIN_CUSTOMS_RATE IS NOT NULL AND A7.MAX_CUSTOMS_RATE IS NOT NULL AND A7.MIN_EQ = '1' AND A7.MAX_EQ = '0' AND A7.MIN_CUSTOMS_RATE &lt;= T.TAX_RATE AND A7.MAX_CUSTOMS_RATE > T.TAX_RATE THEN '1'
                        WHEN A7.MIN_CUSTOMS_RATE IS NOT NULL AND A7.MAX_CUSTOMS_RATE IS NOT NULL AND A7.MIN_EQ = '0' AND A7.MAX_EQ = '1' AND A7.MIN_CUSTOMS_RATE &lt; T.TAX_RATE AND A7.MAX_CUSTOMS_RATE >= T.TAX_RATE THEN '1'
                        WHEN A7.MIN_CUSTOMS_RATE IS NOT NULL AND A7.MAX_CUSTOMS_RATE IS NOT NULL AND A7.MIN_EQ = '1' AND A7.MAX_EQ = '1' AND A7.MIN_CUSTOMS_RATE &lt;= T.TAX_RATE AND A7.MAX_CUSTOMS_RATE >= T.TAX_RATE THEN '1'
                        WHEN A7.MIN_CUSTOMS_RATE IS NOT NULL AND A7.MAX_CUSTOMS_RATE IS NULL AND A7.MIN_EQ = '0' AND A7.MAX_EQ IS NULL AND A7.MIN_CUSTOMS_RATE &lt; T.TAX_RATE THEN '1'
                        WHEN A7.MIN_CUSTOMS_RATE IS NOT NULL AND A7.MAX_CUSTOMS_RATE IS NULL AND A7.MIN_EQ = '1' AND A7.MAX_EQ IS NULL AND A7.MIN_CUSTOMS_RATE &lt;= T.TAX_RATE THEN '1'
                        WHEN A7.MIN_CUSTOMS_RATE IS NULL AND A7.MAX_CUSTOMS_RATE IS NOT NULL AND A7.MIN_EQ IS NULL AND A7.MAX_EQ = '0' AND A7.MAX_CUSTOMS_RATE > T.TAX_RATE THEN '1'
                        WHEN A7.MIN_CUSTOMS_RATE IS NULL AND A7.MAX_CUSTOMS_RATE IS NOT NULL AND A7.MIN_EQ IS NULL AND A7.MAX_EQ = '1' AND A7.MAX_CUSTOMS_RATE >= T.TAX_RATE THEN '1'
                        ELSE '0'
                        END
                        ) = '1'
                )
                LEFT JOIN TG_CUSTOMS_PRICE_COEFF_RULE A8
                ON (
                    A8.COUNTRY_CODE = T.ARRIVAL_COUNTRY_CODE
                    AND A8.HSCODE IS NULL
                    AND (
                        CASE WHEN A8.MIN_CUSTOMS_RATE IS NOT NULL AND A8.MAX_CUSTOMS_RATE IS NOT NULL AND A8.MIN_EQ = '0' AND A8.MAX_EQ = '0' AND A8.MIN_CUSTOMS_RATE &lt; T.TAX_RATE AND A8.MAX_CUSTOMS_RATE > T.TAX_RATE THEN '1'
                        WHEN A8.MIN_CUSTOMS_RATE IS NOT NULL AND A8.MAX_CUSTOMS_RATE IS NOT NULL AND A8.MIN_EQ = '1' AND A8.MAX_EQ = '0' AND A8.MIN_CUSTOMS_RATE &lt;= T.TAX_RATE AND A8.MAX_CUSTOMS_RATE > T.TAX_RATE THEN '1'
                        WHEN A8.MIN_CUSTOMS_RATE IS NOT NULL AND A8.MAX_CUSTOMS_RATE IS NOT NULL AND A8.MIN_EQ = '0' AND A8.MAX_EQ = '1' AND A8.MIN_CUSTOMS_RATE &lt; T.TAX_RATE AND A8.MAX_CUSTOMS_RATE >= T.TAX_RATE THEN '1'
                        WHEN A8.MIN_CUSTOMS_RATE IS NOT NULL AND A8.MAX_CUSTOMS_RATE IS NOT NULL AND A8.MIN_EQ = '1' AND A8.MAX_EQ = '1' AND A8.MIN_CUSTOMS_RATE &lt;= T.TAX_RATE AND A8.MAX_CUSTOMS_RATE >= T.TAX_RATE THEN '1'
                        WHEN A8.MIN_CUSTOMS_RATE IS NOT NULL AND A8.MAX_CUSTOMS_RATE IS NULL AND A8.MIN_EQ = '0' AND A8.MAX_EQ IS NULL AND A8.MIN_CUSTOMS_RATE &lt; T.TAX_RATE THEN '1'
                        WHEN A8.MIN_CUSTOMS_RATE IS NOT NULL AND A8.MAX_CUSTOMS_RATE IS NULL AND A8.MIN_EQ = '1' AND A8.MAX_EQ IS NULL AND A8.MIN_CUSTOMS_RATE &lt;= T.TAX_RATE THEN '1'
                        WHEN A8.MIN_CUSTOMS_RATE IS NULL AND A8.MAX_CUSTOMS_RATE IS NOT NULL AND A8.MIN_EQ IS NULL AND A8.MAX_EQ = '0' AND A8.MAX_CUSTOMS_RATE > T.TAX_RATE THEN '1'
                        WHEN A8.MIN_CUSTOMS_RATE IS NULL AND A8.MAX_CUSTOMS_RATE IS NOT NULL AND A8.MIN_EQ IS NULL AND A8.MAX_EQ = '1' AND A8.MAX_CUSTOMS_RATE >= T.TAX_RATE THEN '1'
                        ELSE '0'
                        END
                    ) = '1'
                )
            ) TT
        ) TA LEFT JOIN TG_CUSTOMS_AGAIN_COEFF_RULE A9
        ON (
            A9.COUNTRY_CODE = TA.ARRIVAL_COUNTRY_CODE
            AND A9.CUSTOMS_CURRENCY = TA.CURRENCY
            AND (
                CASE WHEN A9.MIN_CUSTOMS_PRICE IS NOT NULL AND A9.MAX_CUSTOMS_PRICE IS NOT NULL AND A9.MIN_EQ = '0' AND A9.MAX_EQ = '0' AND A9.MIN_CUSTOMS_PRICE &lt; TA.customsUnitPriceTemp AND A9.MAX_CUSTOMS_PRICE > TA.customsUnitPriceTemp THEN '1'
                WHEN A9.MIN_CUSTOMS_PRICE IS NOT NULL AND A9.MAX_CUSTOMS_PRICE IS NOT NULL AND A9.MIN_EQ = '1' AND A9.MAX_EQ = '0' AND A9.MIN_CUSTOMS_PRICE &lt;= TA.customsUnitPriceTemp AND A9.MAX_CUSTOMS_PRICE > TA.customsUnitPriceTemp THEN '1'
                WHEN A9.MIN_CUSTOMS_PRICE IS NOT NULL AND A9.MAX_CUSTOMS_PRICE IS NOT NULL AND A9.MIN_EQ = '0' AND A9.MAX_EQ = '1' AND A9.MIN_CUSTOMS_PRICE &lt; TA.customsUnitPriceTemp AND A9.MAX_CUSTOMS_PRICE >= TA.customsUnitPriceTemp THEN '1'
                WHEN A9.MIN_CUSTOMS_PRICE IS NOT NULL AND A9.MAX_CUSTOMS_PRICE IS NOT NULL AND A9.MIN_EQ = '1' AND A9.MAX_EQ = '1' AND A9.MIN_CUSTOMS_PRICE &lt;= TA.customsUnitPriceTemp AND A9.MAX_CUSTOMS_PRICE >= TA.customsUnitPriceTemp THEN '1'
                WHEN A9.MIN_CUSTOMS_PRICE IS NOT NULL AND A9.MAX_CUSTOMS_PRICE IS NULL AND A9.MIN_EQ = '0' AND A9.MAX_EQ IS NULL AND A9.MIN_CUSTOMS_PRICE &lt; TA.customsUnitPriceTemp THEN '1'
                WHEN A9.MIN_CUSTOMS_PRICE IS NOT NULL AND A9.MAX_CUSTOMS_PRICE IS NULL AND A9.MIN_EQ = '1' AND A9.MAX_EQ IS NULL AND A9.MIN_CUSTOMS_PRICE &lt;= TA.customsUnitPriceTemp THEN '1'
                WHEN A9.MIN_CUSTOMS_PRICE IS NULL AND A9.MAX_CUSTOMS_PRICE IS NOT NULL AND A9.MIN_EQ IS NULL AND A9.MAX_EQ = '0' AND A9.MAX_CUSTOMS_PRICE > TA.customsUnitPriceTemp THEN '1'
                WHEN A9.MIN_CUSTOMS_PRICE IS NULL AND A9.MAX_CUSTOMS_PRICE IS NOT NULL AND A9.MIN_EQ IS NULL AND A9.MAX_EQ = '1' AND A9.MAX_CUSTOMS_PRICE >= TA.customsUnitPriceTemp THEN '1'
                ELSE '0'
                END
            ) = '1'
        ) LEFT JOIN TG_CUSTOMS_PRICE_MIN_RULE A10
        ON(
            A10.COUNTRY_CODE = TA.ARRIVAL_COUNTRY_CODE
            AND A10.CUSTOMS_CURRENCY = TA.CURRENCY
        )
    </select>

</mapper>
